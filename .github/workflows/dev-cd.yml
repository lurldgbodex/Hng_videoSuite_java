name: Dev-Deployment

on:
  workflow_run:
    workflows: [CI]
    types:
      - completed
    branches: [main]

jobs:
  on-success:
    # if: ${{ github.event.workflow_run.conclusion=='success' && github.event.workflow_run.head_branch == 'dev' }}
    if: github.event.repository.fork == false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
          
      - name: Create .env file
        run: |
          echo "DB_CONNECTION_STRING=postgresql://localhost:5433/${{ secrets.POSTGRES_DEV_DB }}" >> .env
          echo "DB_USERNAME=${{ secrets.POSTGRES_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env 
          echo "RABBITMQ_PORT=${{ secrets.RABBITMQ_PORT }}" >> .env
          echo "RABBITMQ_USERNAME=${{ secrets.RABBITMQ_USERNAME }}" >> .env
          echo "RABBITMQ_PASSWORD=${{ secrets.RABBITMQ_PASSWORD }}" >> .env
          echo "RABBITMQ_HOST=${{ secrets.RABBITMQ_DEV_HOST }}" >> .env


      - name: Create application.properties
        uses: ./.github/workflows/create-application-properties
                  
      - name: Compose Build Docker image
        run: |
          export POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          export POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          export POSTGRES_DB=${{ secrets.POSTGRES_DB }}
          export POSTGRES_DEV_DB=${{ secrets.POSTGRES_DEV_DB }}
          export RABBITMQ_USER=${{ secrets.RABBITMQ_USERNAME }}
          export RABBITMQ_HOST=${{ secrets.RABBITMQ_DEV_HOST }}
          export RABBITMQ_PASSWORD=${{ secrets.RABBITMQ_PASSWORD }}
          docker compose -f compose.yaml build
          
      - name: Save and compress Docker images
        run: |
          docker save hng_video_suite_java | gzip > hng_videoSuite_java.tar.gz
      
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: docker-images
          path: hng_videoSuite_java.tar.gz
      
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: docker-images
          path: .
      
      - name: Copy to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.DEV_SSH_USERNAME }}
          password: ${{ secrets.DEV_SSH_PASSWORD }}
          source: "hng_videoSuite_java.tar.gz"
          target: "/tmp"

      - name: Deploy on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.STAGING_SSH_USERNAME }}
          password: ${{ secrets.STAGING_SSH_PASSWORD }}
          script: |
            cd ~/Hng_videoSuite_java
            chmod +x ./dev-deploy.sh
            ./dev-deploy.sh


  on-failure:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion=='failure' }}
    steps:
      - run: echo "Triggering the Workflow Failed"
